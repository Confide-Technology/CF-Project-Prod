import { type NextPage } from "next";
import Head from "next/head";
import { useState, type FormEventHandler } from "react";
import { trpc } from "../utils/trpc";
import { signOut, useSession } from "next-auth/react";
import { useRouter } from "next/router";
import Link from "next/link";
import formDocument from "../components/form-document";

const Document: NextPage = () => {
    const router = useRouter();
    const util = trpc.useContext();
    const [namedocument, setNamedocument] = useState("");
    const [description, setDescription] = useState("");
    const { data: documents = [] } = trpc.document.getAll.useQuery();
    const { data: session, status } = useSession();
    const createDocument = trpc.document.create.useMutation({
      onSuccess() {
        util.document.invalidate();
        router.push("/document-page");
      },
    });
    
  
    const handleSubmit: FormEventHandler<HTMLFormElement> = async (e) => {
      e.preventDefault();
      await createDocument.mutateAsync({ 
        namedocument, 
        description,
      });

    };

  
    if (status == "loading") {
      return <p>Loading ...</p>;
    }
    if (status == "unauthenticated") {
      router.push("/login");
      return <p>Access denied!</p>;
    }

    return (
        <>
        <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex h-screen items-center justify-center">
        <div className="absolute top-4 right-4">
          Welcome {session?.user?.email}
          <button
            onClick={() => signOut({ callbackUrl: "/login" })}
            className="ml-4 font-semibold text-purple-800 underline underline-offset-2"
          >
            Logout?
          </button>
        </div>
        <div className="mx-auto w-full px-4 py-8 shadow lg:w-1/3">
          <div className="mb-6 flex items-center">
            <h1 className="mr-6 text-4xl font-bold text-purple-600">
              {" "}
              Create Document
            </h1>
          </div>
          <div>
          <form onSubmit={handleSubmit} className="relative">
            <input
              type="text"
              placeholder="Document Name"
              value={namedocument}
              onChange={(e) => setNamedocument(e.target.value)}
              className="border-grey-600 w-full rounded border px-2 py-1 outline-none"
            />
            <input
              type="text"
              placeholder="Description"
              value={description}
              onChange={(e) => setDescription(e.target.value)}
              className="border-grey-600 w-full rounded border px-2 py-1 outline-none"
            />
            
            <button className="bg-purple-600 text-white px-4 py-2 rounded shadow">Create Doucument
              {/* <Link href="/document-page">Create Document</Link> */}
            </button>
          </form>

          <div>
          {/* <ul className="list-reset">
            {documents.map((document) => (
              <formDocument key={document.id} document={namedocument, description} />
            ))}
          </ul> */}
          {/* <ul className="list-reset">
          {documents.map((document) => (
          <formDocument key={document.id} namedocument={document.namedocument} description={document.description} />
          ))}
          </ul> */}
          </div>

          {/* GetAll Fetching Data */}
          {/* <ul className="mt-4">
            {documents.map((document) => (
            <li key={document.id} className="flex items-center justify-between border-b px-2 py-6">
                <span className="inline-block text-gray-600">
                  {document.namedocument}
                </span>
                <span className="inline-block text-gray-600">
                  {document.description}
                </span>
                </li>  
            ))}
          </ul> */}
          </div>


        </div>
        </div>
        </>
    );
  };

export default Document;
